name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly retraining

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        pytest tests/ --cov=src --cov-report=xml
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  train:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Train models
      run: python src/train.py
    - name: Optimize models
      run: |
        python -c "
        from src.model_optimization import ModelOptimizer
        import joblib
        import tensorflow as tf
        
        optimizer = ModelOptimizer()
        
        # Optimize and export neural network
        nn_model = tf.keras.models.load_model('models/neural_network_model')
        optimized_nn = optimizer.optimize_model_size(nn_model, (None, 6))
        optimizer.export_to_onnx(optimized_nn, 'models/neural_network_optimized', (None, 6))
        
        # Optimize and export other models
        for model_name in ['xgboost', 'random_forest', 'svm']:
            model = joblib.load(f'models/{model_name}_model.joblib')
            optimizer.export_to_onnx(model, f'models/{model_name}_optimized', (None, 6))
        "
    - name: Upload models
      uses: actions/upload-artifact@v3
      with:
        name: optimized-models
        path: models/

  deploy:
    needs: train
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Download models
      uses: actions/download-artifact@v3
      with:
        name: optimized-models
        path: models/
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
    - name: Deploy to cloud
      run: |
        # Add deployment commands here (e.g., kubectl apply, aws ecs update-service, etc.)
        echo "Deploying to production..."